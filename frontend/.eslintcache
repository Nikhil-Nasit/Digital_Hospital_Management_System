[{"D:\\project_work\\frontend\\src\\index.js":"1","D:\\project_work\\frontend\\src\\App.js":"2","D:\\project_work\\frontend\\src\\pages\\HomePage.js":"3","D:\\project_work\\frontend\\src\\components\\Profile\\UserProfile.js":"4","D:\\project_work\\frontend\\src\\components\\StartingPage\\StartingPageContent.js":"5","D:\\project_work\\frontend\\src\\components\\Profile\\ProfileForm.js":"6","D:\\project_work\\frontend\\src\\components\\UI\\Slider.js":"7","D:\\project_work\\frontend\\src\\components\\UI\\DataSlider.js":"8","D:\\project_work\\frontend\\src\\store\\auth-context.js":"9","D:\\project_work\\frontend\\src\\pages\\AdminPage.js":"10","D:\\project_work\\frontend\\src\\pages\\PatientPage.js":"11","D:\\project_work\\frontend\\src\\components\\Auth\\PatientForm.js":"12","D:\\project_work\\frontend\\src\\pages\\DoctorPage.js":"13","D:\\project_work\\frontend\\src\\components\\Auth\\DoctorForm.js":"14","D:\\project_work\\frontend\\src\\components\\Auth\\AdminForm.js":"15","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminHomePage.js":"16","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js":"17","D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageDoctorForm.js":"18","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageStaffPage.js":"19","D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageStaffForm.js":"20","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js":"21","D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js":"22","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js":"23","D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js":"24","D:\\project_work\\frontend\\src\\pages\\MainNavigation.js":"25","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminMainNavigation.js":"26","D:\\project_work\\frontend\\src\\components\\StartingPage\\AdminStarting.js":"27"},{"size":346,"mtime":1643380325681,"results":"28","hashOfConfig":"29"},{"size":1693,"mtime":1643903887025,"results":"30","hashOfConfig":"29"},{"size":339,"mtime":1643903733376,"results":"31","hashOfConfig":"29"},{"size":284,"mtime":1643428810689,"results":"32","hashOfConfig":"29"},{"size":300,"mtime":1643905013961,"results":"33","hashOfConfig":"29"},{"size":533,"mtime":1643378828277,"results":"34","hashOfConfig":"29"},{"size":1283,"mtime":1643341302987,"results":"35","hashOfConfig":"29"},{"size":2409,"mtime":1643341292061,"results":"36","hashOfConfig":"29"},{"size":721,"mtime":1643392254826,"results":"37","hashOfConfig":"29"},{"size":303,"mtime":1643895311886,"results":"38","hashOfConfig":"29"},{"size":328,"mtime":1643895425726,"results":"39","hashOfConfig":"29"},{"size":14288,"mtime":1643899832357,"results":"40","hashOfConfig":"29"},{"size":323,"mtime":1643904126221,"results":"41","hashOfConfig":"29"},{"size":4701,"mtime":1643899834945,"results":"42","hashOfConfig":"29"},{"size":6679,"mtime":1643899715459,"results":"43","hashOfConfig":"29"},{"size":383,"mtime":1643911702083,"results":"44","hashOfConfig":"29"},{"size":425,"mtime":1643895944217,"results":"45","hashOfConfig":"29"},{"size":12756,"mtime":1643902520326,"results":"46","hashOfConfig":"29"},{"size":418,"mtime":1643903736491,"results":"47","hashOfConfig":"29"},{"size":11277,"mtime":1643902511789,"results":"48","hashOfConfig":"29"},{"size":424,"mtime":1643895921212,"results":"49","hashOfConfig":"29"},{"size":3152,"mtime":1643904627107,"results":"50","hashOfConfig":"29"},{"size":420,"mtime":1643895933753,"results":"51","hashOfConfig":"29"},{"size":3071,"mtime":1643902664908,"results":"52","hashOfConfig":"29"},{"size":1757,"mtime":1643903771679,"results":"53","hashOfConfig":"29"},{"size":1276,"mtime":1643909695102,"results":"54","hashOfConfig":"29"},{"size":429,"mtime":1643906063150,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qn2svh",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project_work\\frontend\\src\\index.js",[],["114","115"],"D:\\project_work\\frontend\\src\\App.js",[],"D:\\project_work\\frontend\\src\\pages\\HomePage.js",[],"D:\\project_work\\frontend\\src\\components\\Profile\\UserProfile.js",[],"D:\\project_work\\frontend\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\project_work\\frontend\\src\\components\\Profile\\ProfileForm.js",[],["116","117"],"D:\\project_work\\frontend\\src\\components\\UI\\Slider.js",[],"D:\\project_work\\frontend\\src\\components\\UI\\DataSlider.js",[],"D:\\project_work\\frontend\\src\\store\\auth-context.js",[],"D:\\project_work\\frontend\\src\\pages\\AdminPage.js",[],"D:\\project_work\\frontend\\src\\pages\\PatientPage.js",[],"D:\\project_work\\frontend\\src\\components\\Auth\\PatientForm.js",[],"D:\\project_work\\frontend\\src\\pages\\DoctorPage.js",[],"D:\\project_work\\frontend\\src\\components\\Auth\\DoctorForm.js",["118"],"D:\\project_work\\frontend\\src\\components\\Auth\\AdminForm.js",["119","120","121","122"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AdminForm.module.css\";\nconst AdminForm = () => {\n  // const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\n\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\n    useState(false);\n\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\n    useState(false);\n\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\n  const emailInputIsInvalidLogin =\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\n\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\n  const passwordInputIsInvalidLogin =\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\n\n  const emailInputChangeHandlerLogin = (event) => {\n    setEnteredEmailLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const emailInputBlurHandlerLogin = () => {\n    setEnteredEmailLoginTouched(true);\n  };\n\n  const passwordInputChangeHandlerLogin = (event) => {\n    setEnteredPasswordLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const passwordInputBlurHandlerLogin = () => {\n    setEnteredPasswordLoginTouched(true);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    // console.log(\"working\");\n    history.replace(\"/admin/home\");\n    // if (isLogin) {\n    //   setIsLoading(true);\n\n    //   try {\n    //     const response = await fetch(\"http://localhost:5000/login\", {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify({\n    //         email: enteredEmailLogin,\n    //         password: enteredPasswordLogin,\n    //       }),\n    //     });\n\n    //     const responseData = await response.json();\n    //     setIsLoading(false);\n\n    //     if (responseData.status === \"201\") {\n    //       authCtx.login(responseData.token);\n    //       history.replace(\"/\");\n    //       console.log(responseData.message);\n    //     } else {\n    //       setIsInValidCredentials(true);\n    //       setEnteredEmailLogin(\"\");\n    //       setEnteredPasswordLogin(\"\");\n\n    //       setEnteredEmailLoginTouched(false);\n    //       setEnteredPasswordLoginTouched(false);\n    //       console.log(responseData.message);\n    //     }\n    //   } catch (err) {\n    //     console.log(err);\n    //   }\n    // } else {\n    //   try {\n    //     setIsLoading(true);\n\n    //     const response = await fetch(\"http://localhost:5000/signup\", {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify({\n    //         firstName: enteredFirstName,\n    //         lastName: enteredLastName,\n    //         email: enteredEmail,\n    //         mobileNumber: enteredMobileNumber,\n    //         password: enteredPassword,\n    //         confirmPassword: enteredConfirmPassword,\n    //       }),\n    //     });\n\n    //     const responseData = await response.json();\n    //     setIsLoading(false);\n\n    //     if (\n    //       responseData.status !== \"422\" &&\n    //       enteredPassword === enteredConfirmPassword\n    //     ) {\n    //       authCtx.login(responseData.token);\n    //       history.replace(\"/\");\n    //       console.log(responseData.message);\n    //     } else if (enteredPassword !== enteredConfirmPassword) {\n    //       setIsPasswordValid(true);\n    //     } else {\n    //       setIsExsistingUser(true);\n    //       setEnteredEmail(\"\");\n    //       setEnteredFirstName(\"\");\n    //       setEnteredLastName(\"\");\n    //       setEnteredMobileNumber(\"\");\n    //       setEnteredPassword(\"\");\n    //       setEnteredConfirmPassword(\"\");\n\n    //       setEnteredConfirmPasswordTouched(false);\n    //       setEnteredPasswordTouched(false);\n    //       setEnteredEmailTouched(false);\n    //       setEnteredFirstNameTouched(false);\n    //       setEnteredLastNameTouched(false);\n    //       setEnteredMobileNumberTouched(false);\n    //       console.log(responseData.message);\n    //     }\n    //   } catch (err) {\n    //     console.log(err);\n    //   }\n    // }\n  };\n\n  return (\n    <React.Fragment>\n        <section className={classes.auth}>\n          <h1>ADMIN LOGIN</h1>\n\n          <form onSubmit={formSubmitHandler}>\n            {isLogin && (\n              <div>\n                <div className={classes.control}>\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"abc@gmail.com\"\n                    required\n                    onChange={emailInputChangeHandlerLogin}\n                    onBlur={emailInputBlurHandlerLogin}\n                    value={enteredEmailLogin}\n                  />\n                  {emailInputIsInvalidLogin && <h4>Email must not be empty</h4>}\n                </div>\n                <div className={classes.control}>\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    onChange={passwordInputChangeHandlerLogin}\n                    onBlur={passwordInputBlurHandlerLogin}\n                    value={enteredPasswordLogin}\n                  />\n                  {passwordInputIsInvalidLogin && (\n                    <h4>Password must not be empty</h4>\n                  )}\n                </div>\n              </div>\n            )}\n\n            <div className={classes.actions}>\n              {!isLoading && <button disabled={!formIsValid}>Login</button>}\n              {isLoading && (\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\n              )}\n              {isLogin && isInValidCredentials && (\n                <h4>Invalid credentials, could not log you in.</h4>\n              )}\n            </div>\n          </form>\n        </section>\n    </React.Fragment>\n  );\n};\n\nexport default AdminForm;\n","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminHomePage.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageDoctorForm.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageStaffPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageStaffForm.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js",["123"],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js",["124"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteStaffForm.module.css\";\r\n\r\nconst AdminDeleteStaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist , setIsNotExist] = useState(false);\r\n\r\n  const [enteredStaffId, setEnteredStaffId] = useState(\"\");\r\n  const [enteredStaffIdTouched, setEnteredStaffIdTouched] = useState(false);\r\n\r\n  const enteredStaffIdIsValid = enteredStaffId.trim() !== \"\";\r\n  const staffIdInputIsInValid = !enteredStaffIdIsValid && enteredStaffIdTouched;\r\n\r\n  const doctorIdInputChangeHandler = (event) => {\r\n    setEnteredStaffId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const doctorIdInputBlurHandler = (event) => {\r\n    setEnteredStaffIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredStaffIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/staff/delete\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredStaffId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"200\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/admin/delete-staff\");\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h1>Delete Staff</h1>\r\n\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Staff ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter Staff ID\"\r\n                required\r\n                onChange={doctorIdInputChangeHandler}\r\n                onBlur={doctorIdInputBlurHandler}\r\n                value={enteredStaffId}\r\n              />\r\n              {staffIdInputIsInValid && <h4>Staff ID must not be empty</h4>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Delete</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && <h4>Staff does not exist</h4>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDeleteStaffForm;\r\n","D:\\project_work\\frontend\\src\\pages\\MainNavigation.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminMainNavigation.js",[],"D:\\project_work\\frontend\\src\\components\\StartingPage\\AdminStarting.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":11,"column":19,"nodeType":"133","messageId":"134","endLine":11,"endColumn":29},{"ruleId":"131","severity":1,"message":"135","line":1,"column":27,"nodeType":"133","messageId":"134","endLine":1,"endColumn":37},{"ruleId":"131","severity":1,"message":"136","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":10,"column":19,"nodeType":"133","messageId":"134","endLine":10,"endColumn":29},{"ruleId":"131","severity":1,"message":"137","line":11,"column":21,"nodeType":"133","messageId":"134","endLine":11,"endColumn":33},{"ruleId":"131","severity":1,"message":"138","line":8,"column":9,"nodeType":"133","messageId":"134","endLine":8,"endColumn":16},{"ruleId":"131","severity":1,"message":"138","line":8,"column":9,"nodeType":"133","messageId":"134","endLine":8,"endColumn":16},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"no-unused-vars","'setIsLogin' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'setIsLoading' is assigned a value but never used.","'authCtx' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]