[{"D:\\project_work\\frontend\\src\\index.js":"1","D:\\project_work\\frontend\\src\\App.js":"2","D:\\project_work\\frontend\\src\\pages\\HomePage.js":"3","D:\\project_work\\frontend\\src\\components\\Profile\\UserProfile.js":"4","D:\\project_work\\frontend\\src\\components\\StartingPage\\StartingPageContent.js":"5","D:\\project_work\\frontend\\src\\components\\Profile\\ProfileForm.js":"6","D:\\project_work\\frontend\\src\\components\\UI\\Slider.js":"7","D:\\project_work\\frontend\\src\\components\\UI\\DataSlider.js":"8","D:\\project_work\\frontend\\src\\store\\auth-context.js":"9","D:\\project_work\\frontend\\src\\pages\\AdminPage.js":"10","D:\\project_work\\frontend\\src\\pages\\PatientPage.js":"11","D:\\project_work\\frontend\\src\\components\\Auth\\PatientForm.js":"12","D:\\project_work\\frontend\\src\\pages\\DoctorPage.js":"13","D:\\project_work\\frontend\\src\\components\\Auth\\DoctorForm.js":"14","D:\\project_work\\frontend\\src\\components\\Auth\\AdminForm.js":"15","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminHomePage.js":"16","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js":"17","D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageDoctorForm.js":"18","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageStaffPage.js":"19","D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageStaffForm.js":"20","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js":"21","D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js":"22","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js":"23","D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js":"24","D:\\project_work\\frontend\\src\\pages\\MainNavigation.js":"25","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminMainNavigation.js":"26","D:\\project_work\\frontend\\src\\components\\StartingPage\\AdminStarting.js":"27","D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorHomePage.js":"28","D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js":"29","D:\\project_work\\frontend\\src\\components\\StartingPage\\DoctorStarting.js":"30","D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorContactUs.js":"31","D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorAboutUs.js":"32","D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorDetails.js":"33","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientAboutUs.js":"34","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientDetails.js":"35","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientHomePage.js":"36","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientContactUs.js":"37","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientMainNavigation.js":"38","D:\\project_work\\frontend\\src\\components\\StartingPage\\PatientStarting.js":"39","D:\\project_work\\frontend\\src\\pages\\StaffPage.js":"40","D:\\project_work\\frontend\\src\\components\\Auth\\StaffForm.js":"41","D:\\project_work\\frontend\\src\\pages\\Staff\\StaffHomePage.js":"42","D:\\project_work\\frontend\\src\\components\\StartingPage\\StaffStarting.js":"43","D:\\project_work\\frontend\\src\\pages\\Staff\\StaffMainNavigation.js":"44","D:\\project_work\\frontend\\src\\pages\\Staff\\UploadDocument.js":"45","D:\\project_work\\frontend\\src\\pages\\Staff\\StaffManagePatientId.js":"46","D:\\project_work\\frontend\\src\\pages\\Staff\\UploadPDFDocument.js":"47","D:\\project_work\\frontend\\src\\pages\\Footer.js":"48","D:\\project_work\\frontend\\src\\pages\\HomeContactUs.js":"49","D:\\project_work\\frontend\\src\\pages\\HomeAboutUs.js":"50"},{"size":393,"mtime":1644996431000,"results":"51","hashOfConfig":"52"},{"size":3857,"mtime":1645118216587,"results":"53","hashOfConfig":"52"},{"size":339,"mtime":1643903733376,"results":"54","hashOfConfig":"52"},{"size":284,"mtime":1643428810689,"results":"55","hashOfConfig":"52"},{"size":2299,"mtime":1645117008594,"results":"56","hashOfConfig":"52"},{"size":533,"mtime":1643378828277,"results":"57","hashOfConfig":"52"},{"size":1283,"mtime":1643341302987,"results":"58","hashOfConfig":"52"},{"size":2409,"mtime":1643341292061,"results":"59","hashOfConfig":"52"},{"size":721,"mtime":1644769238061,"results":"60","hashOfConfig":"52"},{"size":303,"mtime":1643895311886,"results":"61","hashOfConfig":"52"},{"size":328,"mtime":1643895425726,"results":"62","hashOfConfig":"52"},{"size":16403,"mtime":1645116663764,"results":"63","hashOfConfig":"52"},{"size":323,"mtime":1643904126221,"results":"64","hashOfConfig":"52"},{"size":5382,"mtime":1645116456986,"results":"65","hashOfConfig":"52"},{"size":5236,"mtime":1645116371324,"results":"66","hashOfConfig":"52"},{"size":383,"mtime":1643911702083,"results":"67","hashOfConfig":"52"},{"size":425,"mtime":1643895944217,"results":"68","hashOfConfig":"52"},{"size":13588,"mtime":1644987840744,"results":"69","hashOfConfig":"52"},{"size":418,"mtime":1643903736491,"results":"70","hashOfConfig":"52"},{"size":12079,"mtime":1644987810524,"results":"71","hashOfConfig":"52"},{"size":424,"mtime":1643895921212,"results":"72","hashOfConfig":"52"},{"size":3364,"mtime":1644987867322,"results":"73","hashOfConfig":"52"},{"size":420,"mtime":1643895933753,"results":"74","hashOfConfig":"52"},{"size":3274,"mtime":1645068115294,"results":"75","hashOfConfig":"52"},{"size":3883,"mtime":1645118030082,"results":"76","hashOfConfig":"52"},{"size":4069,"mtime":1645121393509,"results":"77","hashOfConfig":"52"},{"size":435,"mtime":1644583242890,"results":"78","hashOfConfig":"52"},{"size":393,"mtime":1644584986968,"results":"79","hashOfConfig":"52"},{"size":1930,"mtime":1644777807986,"results":"80","hashOfConfig":"52"},{"size":1470,"mtime":1645116882002,"results":"81","hashOfConfig":"52"},{"size":378,"mtime":1644844460121,"results":"82","hashOfConfig":"52"},{"size":2612,"mtime":1645120164281,"results":"83","hashOfConfig":"52"},{"size":3132,"mtime":1645117447216,"results":"84","hashOfConfig":"52"},{"size":2547,"mtime":1645120187425,"results":"85","hashOfConfig":"52"},{"size":3510,"mtime":1645117619261,"results":"86","hashOfConfig":"52"},{"size":403,"mtime":1644640680646,"results":"87","hashOfConfig":"52"},{"size":385,"mtime":1644640650388,"results":"88","hashOfConfig":"52"},{"size":1988,"mtime":1644777814115,"results":"89","hashOfConfig":"52"},{"size":1475,"mtime":1644640558108,"results":"90","hashOfConfig":"52"},{"size":318,"mtime":1644986924725,"results":"91","hashOfConfig":"52"},{"size":5679,"mtime":1644987326666,"results":"92","hashOfConfig":"52"},{"size":383,"mtime":1644988178739,"results":"93","hashOfConfig":"52"},{"size":435,"mtime":1644988244991,"results":"94","hashOfConfig":"52"},{"size":3541,"mtime":1645069093287,"results":"95","hashOfConfig":"52"},{"size":2500,"mtime":1645069741235,"results":"96","hashOfConfig":"52"},{"size":3473,"mtime":1645080262392,"results":"97","hashOfConfig":"52"},{"size":3890,"mtime":1645159128059,"results":"98","hashOfConfig":"52"},{"size":1644,"mtime":1645117708193,"results":"99","hashOfConfig":"52"},{"size":3023,"mtime":1645117919948,"results":"100","hashOfConfig":"52"},{"size":3497,"mtime":1645156340616,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"qn2svh",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project_work\\frontend\\src\\index.js",[],["219","220"],"D:\\project_work\\frontend\\src\\App.js",[],"D:\\project_work\\frontend\\src\\pages\\HomePage.js",[],"D:\\project_work\\frontend\\src\\components\\Profile\\UserProfile.js",[],"D:\\project_work\\frontend\\src\\components\\StartingPage\\StartingPageContent.js",["221"],"// import Slider from '../UI/Slider';\nimport classes from \"./StartingPageContent.module.css\";\nimport { Carousel } from \"react-bootstrap\";\nimport React from \"react\";\nimport Footer from \"../../pages/Footer\";\nconst StartingPageContent = () => {\n  return (\n    <React.Fragment>\n      <Carousel>\n        <Carousel.Item interval={5000}>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://media.istockphoto.com/photos/close-up-of-doctor-is-touching-digital-virtual-screen-for-analytics-picture-id1273886962?b=1&k=20&m=1273886962&s=170667a&w=0&h=f9FyAVFdXEwAv7qdEFWbdfLoqa7z87rwyKsd9iqrjBw=\"\n            alt=\"First slide\"\n            height={550}\n            width={100}\n          />\n          <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item interval={5000}>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://media.istockphoto.com/photos/over-the-shoulder-shot-of-senior-medical-scientist-working-with-ct-picture-id1050311748?b=1&k=20&m=1050311748&s=170667a&w=0&h=LBGjHzonYmWN1Qdb8Hd-YrC87gWHTPpjlfpyStl6Ajs=\"\n            alt=\"Second slide\"\n            height={550}\n            width={100}\n          />\n          <Carousel.Caption>\n            Specialization\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item interval={5000}>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://media.istockphoto.com/photos/an-employee-pulls-a-trolley-for-cleaning-offices-woman-cleaner-is-in-picture-id1316473356?b=1&k=20&m=1316473356&s=170667a&w=0&h=7nYl9IEj2K_MsU4Z0BMVRmhGygh9Nx6vkpVDIvGGHMA=\"\n            alt=\"Third slide\"\n            height={550}\n            width={100}\n          />\n          <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n            </p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <Footer></Footer>\n    </React.Fragment>\n  );\n};\n\nexport default StartingPageContent;","D:\\project_work\\frontend\\src\\components\\Profile\\ProfileForm.js",[],["222","223"],"D:\\project_work\\frontend\\src\\components\\UI\\Slider.js",[],"D:\\project_work\\frontend\\src\\components\\UI\\DataSlider.js",[],"D:\\project_work\\frontend\\src\\store\\auth-context.js",[],"D:\\project_work\\frontend\\src\\pages\\AdminPage.js",[],"D:\\project_work\\frontend\\src\\pages\\PatientPage.js",[],"D:\\project_work\\frontend\\src\\components\\Auth\\PatientForm.js",["224","225"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport PatientImage from \"../images/Geometric1.png\";\r\n//import classes from \"./AdminForm.module.css\";\r\nimport classes from \"./PatientForm.module.css\";\r\nimport { Form, Group, Card } from \"react-bootstrap\";\r\nconst PatientForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n  const [isExsistingUser, setIsExsistingUser] = useState(false);\r\n  const [isPasswordInValid, setIsPasswordInValid] = useState(false);\r\n\r\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\r\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\r\n\r\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\r\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\r\n\r\n  const [enteredConfirmPassword, setEnteredConfirmPassword] = useState(\"\");\r\n  const [enteredConfirmPasswordTouched, setEnteredConfirmPasswordTouched] =\r\n    useState(false);\r\n\r\n  const [enteredMobileNumber, setEnteredMobileNumber] = useState(\"\");\r\n  const [enteredMobileNumberTouched, setEnteredMobileNumberTouched] =\r\n    useState(false);\r\n\r\n  const enteredFirstNameIsValid = enteredFirstName.trim() !== \"\";\r\n  const firstNameInputIsInValid =\r\n    !enteredFirstNameIsValid && enteredFirstNameTouched;\r\n\r\n  const enteredLastNameIsValid = enteredLastName.trim() !== \"\";\r\n  const lastNameInputIsInValid =\r\n    !enteredLastNameIsValid && enteredLastNameTouched;\r\n\r\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\r\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const enteredPasswordIsValid = enteredPassword.trim() !== \"\";\r\n  const passwordInputIsInValid =\r\n    !enteredPasswordIsValid && enteredPasswordTouched;\r\n\r\n  const enteredConfirmPasswordIsValid = enteredConfirmPassword.trim() !== \"\";\r\n  const ConfirmPasswordInputIsInValid =\r\n    !enteredConfirmPasswordIsValid && enteredConfirmPasswordTouched;\r\n\r\n  const enteredMobileNumberIsValid = enteredMobileNumber.trim() !== \"\";\r\n  const mobileNumberInputIsInValid =\r\n    !enteredMobileNumberIsValid && enteredMobileNumberTouched;\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const firstNameInputChangeHandler = (event) => {\r\n    setEnteredFirstName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const firstNameInputBlurHandler = (event) => {\r\n    setEnteredFirstNameTouched(true);\r\n  };\r\n\r\n  const lastNameInputChangeHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const lastNameInputBlurHandler = (event) => {\r\n    setEnteredLastNameTouched(true);\r\n  };\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const emailInputBlurHandler = (event) => {\r\n    setEnteredEmailTouched(true);\r\n  };\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const passwordInputBlurHandler = (event) => {\r\n    setEnteredPasswordTouched(true);\r\n  };\r\n\r\n  const confirmPasswordInputChangeHandler = (event) => {\r\n    setEnteredConfirmPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const confirmPasswordInputBlurHandler = (event) => {\r\n    setEnteredConfirmPasswordTouched(true);\r\n  };\r\n\r\n  const mobileNumberInputChangeHandler = (event) => {\r\n    setEnteredMobileNumber(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const mobileNumberInputBlurHandler = (event) => {\r\n    setEnteredMobileNumberTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n  if (\r\n    enteredEmailIsValid &&\r\n    enteredFirstNameIsValid &&\r\n    enteredLastNameIsValid &&\r\n    enteredPasswordIsValid &&\r\n    enteredConfirmPasswordIsValid &&\r\n    enteredMobileNumberIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n          history.replace(\"/patient/detail\");\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"http://localhost:5000/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: enteredFirstName,\r\n            lastName: enteredLastName,\r\n            email: enteredEmail,\r\n            mobileNumber: enteredMobileNumber,\r\n            password: enteredPassword,\r\n            confirmPassword: enteredConfirmPassword,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (\r\n          responseData.status !== \"422\" &&\r\n          enteredPassword === enteredConfirmPassword\r\n        ) {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"userId\", responseData.userId);\r\n          history.replace(\"/patient/home\");\r\n          console.log(responseData.message);\r\n        } else if (enteredPassword !== enteredConfirmPassword) {\r\n          setIsPasswordInValid(true);\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsExsistingUser(true);\r\n          setEnteredEmail(\"\");\r\n          setEnteredFirstName(\"\");\r\n          setEnteredLastName(\"\");\r\n          setEnteredMobileNumber(\"\");\r\n          setEnteredPassword(\"\");\r\n          setEnteredConfirmPassword(\"\");\r\n\r\n          setEnteredConfirmPasswordTouched(false);\r\n          setEnteredPasswordTouched(false);\r\n          setEnteredEmailTouched(false);\r\n          setEnteredFirstNameTouched(false);\r\n          setEnteredLastNameTouched(false);\r\n          setEnteredMobileNumberTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Img src={PatientImage} alt=\"Card image\" height={1050} />\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>{isLogin ? \"PATIENT LOGIN\" : \"SIGN UP\"}</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {!isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    placeholder=\"First Name\"\r\n                    required\r\n                    onChange={firstNameInputChangeHandler}\r\n                    onBlur={firstNameInputBlurHandler}\r\n                    value={enteredFirstName}\r\n                  />\r\n                  {firstNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>First Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"lname\"\r\n                    placeholder=\"Last Name\"\r\n                    required\r\n                    onChange={lastNameInputChangeHandler}\r\n                    onBlur={lastNameInputBlurHandler}\r\n                    value={enteredLastName}\r\n                  />\r\n                  {lastNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Last Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    id=\"email\"\r\n                    required\r\n                    onChange={emailInputChangeHandler}\r\n                    onBlur={emailInputBlurHandler}\r\n                    value={enteredEmail}\r\n                  />\r\n                  {emailInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Mobile Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"number\"\r\n                    placeholder=\"10 digit mobile number\"\r\n                    pattern=\"[0-9]{10}\"\r\n                    required\r\n                    onChange={mobileNumberInputChangeHandler}\r\n                    onBlur={mobileNumberInputBlurHandler}\r\n                    value={enteredMobileNumber}\r\n                  />\r\n                  {mobileNumberInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Mobile Number must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={passwordInputChangeHandler}\r\n                    onBlur={passwordInputBlurHandler}\r\n                    value={enteredPassword}\r\n                  />\r\n                  {passwordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"cpassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={confirmPasswordInputChangeHandler}\r\n                    onBlur={confirmPasswordInputBlurHandler}\r\n                    value={enteredConfirmPassword}\r\n                  />\r\n                  {ConfirmPasswordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Confirm Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && (\r\n                <button disabled={!formIsValid}>\r\n                  {isLogin ? \"Login\" : \"Create Account\"}\r\n                </button>\r\n              )}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isExsistingUser && (\r\n                <div className=\"p-3\">\r\n                  <h6>User exists already, please login instead.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isPasswordInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Password and Confirm Password must be same.</h6>\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                className={classes.toggle}\r\n                onClick={switchAuthModeHandler}\r\n              >\r\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientForm;\r\n","D:\\project_work\\frontend\\src\\pages\\DoctorPage.js",[],"D:\\project_work\\frontend\\src\\components\\Auth\\DoctorForm.js",["226","227","228"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./DoctorForm.module.css\";\r\nimport { Form, Group ,Card} from \"react-bootstrap\";\r\nimport DoctorImage from \"../images/Geometric2.png\";\r\nconst DoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/doctor/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"doctorId\", responseData.doctorId);\r\n          history.replace({\r\n            pathname: \"/doctor/detail\",\r\n            // doctorId : responseData.doctorDetail._id\r\n          });\r\n          // console.log(responseData.message);\r\n          // console.log(responseData.doctorId);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Img src={DoctorImage} alt=\"Card image\" height={700}/>\r\n      <Card.ImgOverlay>\r\n    <section className={classes.auth}>\r\n      <h3>DOCTOR LOGIN</h3>\r\n\r\n      <form onSubmit={formSubmitHandler}>\r\n        {isLogin && (\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"abc@gmail.com\"\r\n                required\r\n                onChange={emailInputChangeHandlerLogin}\r\n                onBlur={emailInputBlurHandlerLogin}\r\n                value={enteredEmailLogin}\r\n              />\r\n              {emailInputIsInvalidLogin && (\r\n                <div className=\"p-3\">\r\n                  <h6>Email must not be empty</h6>\r\n               </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                onChange={passwordInputChangeHandlerLogin}\r\n                onBlur={passwordInputBlurHandlerLogin}\r\n                value={enteredPasswordLogin}\r\n              />\r\n              {passwordInputIsInvalidLogin && \r\n              <div className=\"p-3\">\r\n              <h6>Password must not be empty</h6>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.actions}>\r\n          {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n          {isLoading && (\r\n            <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n          )}\r\n          {isLogin && isInValidCredentials && (\r\n            <div className=\"p-3\">\r\n              <h6>Invalid credentials, could not log you in.</h6>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n    </Card.ImgOverlay>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorForm;","D:\\project_work\\frontend\\src\\components\\Auth\\AdminForm.js",["229","230","231"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AdminForm.module.css\";\nimport { Form, Group ,Card} from \"react-bootstrap\";\nimport AdminImage from \"../images/Geometric3.png\";\nconst AdminForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\n\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\n    useState(false);\n\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\n    useState(false);\n\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\n  const emailInputIsInvalidLogin =\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\n\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\n  const passwordInputIsInvalidLogin =\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\n\n  const emailInputChangeHandlerLogin = (event) => {\n    setEnteredEmailLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const emailInputBlurHandlerLogin = () => {\n    setEnteredEmailLoginTouched(true);\n  };\n\n  const passwordInputChangeHandlerLogin = (event) => {\n    setEnteredPasswordLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const passwordInputBlurHandlerLogin = () => {\n    setEnteredPasswordLoginTouched(true);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLogin) {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(\"http://localhost:5000/admin/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: enteredEmailLogin,\n            password: enteredPasswordLogin,\n          }),\n        });\n\n        const responseData = await response.json();\n        setIsLoading(false);\n\n        if (responseData.status === \"201\") {\n          authCtx.login(responseData.token);\n          window.sessionStorage.setItem(\"adminId\", responseData.adminId);\n          history.replace(\"/admin/home\");\n          console.log(responseData.message);\n        } else {\n          setIsInValidCredentials(true);\n          setEnteredEmailLogin(\"\");\n          setEnteredPasswordLogin(\"\");\n\n          setEnteredEmailLoginTouched(false);\n          setEnteredPasswordLoginTouched(false);\n          console.log(responseData.message);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Card.Img src={AdminImage} alt=\"Card image\" height={700}/>\n      <Card.ImgOverlay>\n      <section className={classes.auth}>\n        <h3>ADMIN LOGIN</h3>\n\n        <form onSubmit={formSubmitHandler}>\n          {isLogin && (\n            <div>\n              <div className={classes.control}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"abc@gmail.com\"\n                  required\n                  onChange={emailInputChangeHandlerLogin}\n                  onBlur={emailInputBlurHandlerLogin}\n                  value={enteredEmailLogin}\n                />\n                {emailInputIsInvalidLogin && (\n                  <div className=\"p-3\">\n                    <h6>Email must not be empty</h6>\n                  </div>\n                )}\n              </div>\n              <div className={classes.control}>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  onChange={passwordInputChangeHandlerLogin}\n                  onBlur={passwordInputBlurHandlerLogin}\n                  value={enteredPasswordLogin}\n                />\n                {passwordInputIsInvalidLogin && (\n                  <div className=\"p-3\">\n                    <h6 calssName=\"error\">Password must not be empty</h6>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          <div className={classes.actions}>\n            {!isLoading && <button disabled={!formIsValid}>Login</button>}\n            {isLoading && (\n              <RingLoader color=\"white\" height={80} width={80}></RingLoader>\n            )}\n            {isLogin && isInValidCredentials && (\n              <div className=\"p-3\">\n                <h6 calssName=\"error\">Invalid credentials, could not log you in.</h6>\n              </div>\n            )}\n          </div>\n        </form>\n      </section>\n      </Card.ImgOverlay>  \n    </React.Fragment>\n  );\n};\n\nexport default AdminForm;","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminHomePage.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageDoctorForm.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminManageStaffPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminManageStaffForm.js",[],"D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js",["232"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteDoctorForm.module.css\";\r\n\r\nconst AdminDeleteDoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist, setIsNotExist] = useState(false);\r\n\r\n  const [enteredDoctorId, setEnteredDoctorId] = useState(\"\");\r\n  const [enteredDoctorIdTouched, setEnteredDoctorIdTouched] = useState(false);\r\n\r\n  const enteredDoctorIdIsValid = enteredDoctorId.trim() !== \"\";\r\n  const doctorIdInputIsInValid =\r\n    !enteredDoctorIdIsValid && enteredDoctorIdTouched;\r\n\r\n  const doctorIdInputChangeHandler = (event) => {\r\n    setEnteredDoctorId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const doctorIdInputBlurHandler = (event) => {\r\n    setEnteredDoctorIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredDoctorIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"Doctor Deleted Successfully\");\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/doctor/delete\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredDoctorId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"200\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/admin/home\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/admin/delete-doctor\");\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log({ err });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Delete Doctor</h3>\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Doctor ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter Doctor ID\"\r\n                required\r\n                onChange={doctorIdInputChangeHandler}\r\n                onBlur={doctorIdInputBlurHandler}\r\n                value={enteredDoctorId}\r\n              />\r\n              {doctorIdInputIsInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Doctor ID must not be empty</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Delete</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && (\r\n                <div className=\"p-3\">\r\n                  <h6>Doctor does not exist</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDeleteDoctorForm;\r\n","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js",[],"D:\\project_work\\frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js",["233"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteStaffForm.module.css\";\r\n\r\nconst AdminDeleteStaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist, setIsNotExist] = useState(false);\r\n\r\n  const [enteredStaffId, setEnteredStaffId] = useState(\"\");\r\n  const [enteredStaffIdTouched, setEnteredStaffIdTouched] = useState(false);\r\n\r\n  const enteredStaffIdIsValid = enteredStaffId.trim() !== \"\";\r\n  const staffIdInputIsInValid = !enteredStaffIdIsValid && enteredStaffIdTouched;\r\n\r\n  const staffIdInputChangeHandler = (event) => {\r\n    setEnteredStaffId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const staffIdInputBlurHandler = (event) => {\r\n    setEnteredStaffIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredStaffIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/staff/delete\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredStaffId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"200\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/admin/home\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/admin/delete-staff\");\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Delete Staff</h3>\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Staff ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter Staff ID\"\r\n                required\r\n                onChange={staffIdInputChangeHandler}\r\n                onBlur={staffIdInputBlurHandler}\r\n                value={enteredStaffId}\r\n              />\r\n              {staffIdInputIsInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Staff ID must not be empty</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Delete</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && (\r\n                <div className=\"p-3\">\r\n                  <h6>Staff does not exist</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDeleteStaffForm;\r\n","D:\\project_work\\frontend\\src\\pages\\MainNavigation.js",["234","235","236","237","238","239","240"],"import React from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport classes from \"./MainNavigation.module.css\";\nimport AuthContext from \"../store/auth-context\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n  Container,\n} from \"react-bootstrap\";\nconst MainNavigation = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    history.replace(\"/\");\n  };\n  const isLoggedIn = authCtx.isLoggedIn;\n  const style1 = {\n    color: \"white\",\n    fontSize: 16,\n  };\n  const style2 = {\n    color: \"pink\",\n    fontSize: 20,\n  };\n\n  return (\n    // <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n    // <header className={ `${classes.brown} ${classes.highlightTextOut}`}>\n    //   <NavLink to=\"/\">\n    //     <div className={classes.logo}>Work in Progress</div>\n    //   </NavLink>\n    //   <nav>\n    //     <ul>\n    //       {!isLoggedIn && (\n    //         <li>\n    //           <NavLink activeClassName={classes.active} alt=\"ADMIN\"to=\"/admin/login\">\n    //             ADMIN\n    //           </NavLink>\n    //         </li>\n    //       )}\n\n    //       {!isLoggedIn && (\n    //         <li>\n    //           <NavLink activeClassName={classes.active} alt=\"PATIENT LOGIN\"to=\"/patient/login\">\n    //             PATIENT LOGIN\n    //           </NavLink>\n    //         </li>\n    //       )}\n\n    //       {!isLoggedIn && (\n    //         <li>\n    //           <NavLink activeClassName={classes.active} alt=\"DOCTOR LOGIN\"to=\"/doctor/login\">\n    //             DOCTOR LOGIN\n    //           </NavLink>\n    //         </li>\n    //       )}\n\n    //       {isLoggedIn && (\n    //         <li>\n    //           <NavLink activeClassName={classes.active} alt=\"PROFILE\" to=\"/profile\">\n    //             PROFILE\n    //           </NavLink>\n    //         </li>\n    //       )}\n\n    //       {isLoggedIn && (\n    //         <li>\n    //           <button className={classes.active} onClick={logoutHandler} alt=\"LOGOUT\">LOGOUT</button>\n    //         </li>\n    //       )}\n    //     </ul>\n    //   </nav>\n    // </header>\n    // </nav>\n    //\n\n    <React.Fragment>\n      <Navbar bg=\"p-3 bg-dark text-white\" sticky=\"top\" variant=\"light\">\n        <Container>\n          <Navbar.Brand as={NavLink} to=\"/\" style={style1}>\n            Work in progress\n          </Navbar.Brand>\n          <Nav className=\"ms-auto\">\n            <Nav.Link\n              as={NavLink}\n              activeClassName={classes.active}\n              to=\"/admin/login\"\n              style={style1}\n            >\n              ADMIN\n            </Nav.Link>\n            <Nav.Link\n              as={NavLink}\n              activeClassName={classes.active}\n              to=\"/patient/login\"\n              style={style1}\n            >\n              PATIENT\n            </Nav.Link>\n            <Nav.Link\n              as={NavLink}\n              activeClassName={classes.active}\n              to=\"/doctor/login\"\n              style={style1}\n            >\n              DOCTOR\n            </Nav.Link>\n            <Nav.Link\n              as={NavLink}\n              activeClassName={classes.active}\n              to=\"/staff/login\"\n              style={style1}\n            >\n              STAFF\n            </Nav.Link>\n            <Nav.Link\n              as={NavLink}\n              activeClassName={classes.active}\n              to=\"/about\"\n              style={style1}\n            >\n              ABOUT US\n            </Nav.Link>\n            <Nav.Link\n              as={NavLink}\n              activeClassName={classes.active}\n              to=\"/contact\"\n              style={style1}\n            >\n              CONTACT US\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","D:\\project_work\\frontend\\src\\pages\\Admin\\AdminMainNavigation.js",["241","242","243"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./AdminMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst AdminMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const style = {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    // <React.Fragment>\r\n    //   <header\r\n    //     className={`${classes.header} ${classes.brown} ${classes.highlightTextOut}`}\r\n    //   >\r\n    //     <NavLink to=\"/admin/home\">\r\n    //       <div className={classes.logo}>Welcome Admin</div>\r\n    //     </NavLink>\r\n    //     <ul>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-doctor\"\r\n    //           alt=\"ADD DOCTOR\"\r\n    //         >\r\n    //           ADD DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-staff\"\r\n    //           alt=\"ADD STAFF\"\r\n    //         >\r\n    //           ADD STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-doctor\"\r\n    //           alt=\"DELETE DOCTOR\"\r\n    //         >\r\n    //           DELETE DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-staff\"\r\n    //           alt=\"DELETE STAFF\"\r\n    //         >\r\n    //           DELETE STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <Button\r\n    //             variant=\"outline-info\"\r\n    //             onClick={logoutHandler}\r\n    //             alt=\"LOGOUT\"\r\n    //           >\r\n    //             LOGOUT\r\n    //           </Button>\r\n    //         </li>\r\n    //       )}\r\n    //     </ul>\r\n    //   </header>\r\n    // </React.Fragment>\r\n\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/admin/home\">\r\n            Welcome Admin\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/add-doctor\"\r\n              style={style}\r\n            >\r\n              ADD DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/add-staff\"\r\n              style={style}\r\n            >\r\n              ADD STAFF\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/delete-doctor\"\r\n              style={style}\r\n            >\r\n              DELETE DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/delete-staff\"\r\n              style={style}\r\n            >\r\n              DELETE STAFF\r\n            </Nav.Link>\r\n          </Nav>\r\n          {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\"\r\n                style={style}\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminMainNavigation;\r\n","D:\\project_work\\frontend\\src\\components\\StartingPage\\AdminStarting.js",[],"D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorHomePage.js",[],"D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js",[],"D:\\project_work\\frontend\\src\\components\\StartingPage\\DoctorStarting.js",[],"D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorContactUs.js",["244"],"import React from \"react\";\r\nimport classes from \"./DoctorContactUs.module.css\";\r\nimport DoctorMainNavigation from \"./DoctorMainNavigation\";\r\n\r\nconst DoctorContactUs = () => {\r\n    return(\r\n        <React.Fragment>\r\n        <DoctorMainNavigation></DoctorMainNavigation>\r\n        <h1>Contact Us Details!</h1>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DoctorContactUs;","D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorAboutUs.js",[],"D:\\project_work\\frontend\\src\\pages\\Doctor\\DoctorDetails.js",["245"],"import React from \"react\";\r\nimport classes from \"./DoctorDetails.module.css\";\r\nimport DoctorMainNavigation from \"./DoctorMainNavigation\";\r\nimport IMG from '../../components/images/avatar.png';\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst DoctorDetails = () => {\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const doctorId = window.sessionStorage.getItem(\"doctorId\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/doctor/detail/${doctorId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const doctorDetail = {\r\n          firstName: responseData.doctor.firstName,\r\n          lastName: responseData.doctor.lastName,\r\n          email: responseData.doctor.email,\r\n          mobileNumber: responseData.doctor.mobileNumber,\r\n          address: responseData.doctor.address,\r\n          specialization: responseData.doctor.specialization,\r\n        };\r\n        setDoctor(doctorDetail);\r\n        // console.log(responseData.message);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, [doctorId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DoctorMainNavigation></DoctorMainNavigation>\r\n      {/* <li className={classes.doctor}>\r\n        <h2>{doctor.firstName}</h2>\r\n        <h2>{doctor.lastName}</h2>\r\n        <h2>{doctor.email}</h2>\r\n        <h2>{doctor.mobileNumber}</h2>\r\n        <h2>{doctor.address}</h2>\r\n        <h2>{doctor.specialization}</h2>\r\n      </li> */}\r\n      <div className=\"background1\">\r\n        <div className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"90vh\" }}>\r\n          <Card style={{ width: '40rem' }} >\r\n            <Card.Img variant=\"top\" className=\"center\" style={{ maxHeight: \"100px\", maxWidth: \"100px\" }} src={IMG} />\r\n            <Card.Body>\r\n              <Card.Title className=\"text-center\"><strong>Doctor Information</strong></Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\" style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>First Name : {doctor.firstName}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Last Name : {doctor.lastName}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Email address : {doctor.email}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Mobile Number : {doctor.mobileNumber}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Address : </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Age : </ListGroupItem>\r\n            </ListGroup>\r\n            <Button type=\"button\" variant=\"btn btn-primary btn-sm w-10%\" style={{ width: \"150px\", margin: \"auto\", marginTop: \"20px\", marginBottom: \"20px\" }}>Update</Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorDetails;","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientAboutUs.js",[],"D:\\project_work\\frontend\\src\\pages\\Patient\\PatientDetails.js",[],"D:\\project_work\\frontend\\src\\pages\\Patient\\PatientHomePage.js",[],"D:\\project_work\\frontend\\src\\pages\\Patient\\PatientContactUs.js",["246"],"import React from \"react\";\r\nimport classes from \"./PatientContactUs.module.css\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\n\r\nconst PatientContactUs = () => {\r\n    return(\r\n        <React.Fragment>\r\n        <PatientMainNavigation></PatientMainNavigation>\r\n        <h1>Contact Us Details!</h1>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PatientContactUs;","D:\\project_work\\frontend\\src\\pages\\Patient\\PatientMainNavigation.js",[],"D:\\project_work\\frontend\\src\\components\\StartingPage\\PatientStarting.js",[],"D:\\project_work\\frontend\\src\\pages\\StaffPage.js",[],"D:\\project_work\\frontend\\src\\components\\Auth\\StaffForm.js",["247"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminForm.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst StaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/staff/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"staffId\", responseData.staffId);\r\n          history.replace({\r\n            pathname: \"/staff/home\",\r\n            // doctorId : responseData.doctorDetail._id\r\n          });\r\n          // console.log(responseData.message);\r\n          // console.log(responseData.doctorId);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpEd4pHlkPIwWbqsep-GPUHv_fWAdZvGXO1g&usqp=CAU\"\r\n        alt=\"Card image\"\r\n        height={700}\r\n      />\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>STAFF LOGIN</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StaffForm;\r\n","D:\\project_work\\frontend\\src\\pages\\Staff\\StaffHomePage.js",[],"D:\\project_work\\frontend\\src\\components\\StartingPage\\StaffStarting.js",[],"D:\\project_work\\frontend\\src\\pages\\Staff\\StaffMainNavigation.js",["248","249","250"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./StaffMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst StaffMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    window.sessionStorage.removeItem(\"staffId\");\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  return (\r\n    // <React.Fragment>\r\n    //   <header\r\n    //     className={`${classes.header} ${classes.brown} ${classes.highlightTextOut}`}\r\n    //   >\r\n    //     <NavLink to=\"/admin/home\">\r\n    //       <div className={classes.logo}>Welcome Admin</div>\r\n    //     </NavLink>\r\n    //     <ul>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-doctor\"\r\n    //           alt=\"ADD DOCTOR\"\r\n    //         >\r\n    //           ADD DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-staff\"\r\n    //           alt=\"ADD STAFF\"\r\n    //         >\r\n    //           ADD STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-doctor\"\r\n    //           alt=\"DELETE DOCTOR\"\r\n    //         >\r\n    //           DELETE DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-staff\"\r\n    //           alt=\"DELETE STAFF\"\r\n    //         >\r\n    //           DELETE STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <Button\r\n    //             variant=\"outline-info\"\r\n    //             onClick={logoutHandler}\r\n    //             alt=\"LOGOUT\"\r\n    //           >\r\n    //             LOGOUT\r\n    //           </Button>\r\n    //         </li>\r\n    //       )}\r\n    //     </ul>\r\n    //   </header>\r\n    // </React.Fragment>\r\n\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/staff/home\">\r\n            Welcome Staff\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/manage-patient-id\"\r\n            >\r\n              UPLOAD PATIENT DOCUMENT\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/delete-patient-document\"\r\n            >\r\n              DELETE PATIENT DOCUMENT\r\n            </Nav.Link>\r\n          </Nav>\r\n          {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\"\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StaffMainNavigation;\r\n","D:\\project_work\\frontend\\src\\pages\\Staff\\UploadDocument.js",["251","252","253","254","255","256","257","258"],"import { React, useState, useEffect, useRef } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport StaffMainNavigation from \"./StaffMainNavigation\";\r\nimport \"./UploadDocument.css\";\r\nimport { Worker } from \"@react-pdf-viewer/core\";\r\n// Import the main Viewer component\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\n// Import the styles\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\n// default layout plugin\r\nimport { defaultLayoutPlugin } from \"@react-pdf-viewer/default-layout\";\r\n// Import styles of default layout plugin\r\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport StaffManagePatientId from \"./StaffManagePatientId\";\r\nconst UploadDocument = () => {\r\n  //   const [file, setFile] = useState();\r\n  //   const [previewUrl, setPreviewUrl] = useState();\r\n\r\n  //   const filePickerRef = useRef();\r\n\r\n  //   useEffect(() => {\r\n  //     if (!file) {\r\n  //       return;\r\n  //     }\r\n  //     const fileReader = new FileReader();\r\n  //     fileReader.onload = () => {\r\n  //       setPreviewUrl(fileReader.result);\r\n  //     };\r\n  //     fileReader.readAsDataURL(file);\r\n  //   }, [file]);\r\n\r\n  //   const pickedHandler = (event) => {\r\n  //       console.log(event.target.files);\r\n  //     let pickedFile;\r\n  //     if (event.target.files && event.target.files.length === 1) {\r\n  //       pickedFile = event.target.files[0];\r\n  //       setFile(pickedFile);\r\n  //     } else {\r\n  //     }\r\n  //   };\r\n\r\n  //   const pickImageHandler = () => {\r\n  //     filePickerRef.current.click();\r\n  //   };\r\n\r\n  //   return (\r\n  //     <div>\r\n  //       <StaffMainNavigation></StaffMainNavigation>\r\n  //       <div className=\"form-control\">\r\n  //         <input\r\n  //           ref={filePickerRef}\r\n  //           style={{ display: \"none\" }}\r\n  //           type=\"file\"\r\n  //           accept=\".jpg,.png,.jpeg,.pdf\"\r\n  //           onChange={pickedHandler}\r\n  //         />\r\n\r\n  //         <div className=\"image-upload__preview\">\r\n  //           {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n  //           {!previewUrl && <p>Please pick an image.</p>}\r\n  //         </div>\r\n  //         <Button type=\"button\" onClick={pickImageHandler}>\r\n  //           PICK DOCUMENT\r\n  //         </Button>\r\n  //       </div>\r\n  //     </div>\r\n\r\n  return (\r\n    <div>\r\n      <StaffMainNavigation></StaffMainNavigation>\r\n      <StaffManagePatientId></StaffManagePatientId>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadDocument;\r\n","D:\\project_work\\frontend\\src\\pages\\Staff\\StaffManagePatientId.js",["259"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./StaffManagePatientId.module.css\";\r\n\r\nconst StaffManagePatientId = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist, setIsNotExist] = useState(false);\r\n\r\n  const [enteredPatientId, setEnteredPatientId] = useState(\"\");\r\n  const [enteredPatientIdTouched, setEnteredPatientIdTouched] = useState(false);\r\n\r\n  const enteredPatientIdIsValid = enteredPatientId.trim() !== \"\";\r\n  const patientIdInputIsInValid = !enteredPatientIdIsValid && enteredPatientIdTouched;\r\n\r\n  const patientIdInputChangeHandler = (event) => {\r\n    setEnteredPatientId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const patientIdInputBlurHandler = (event) => {\r\n    setEnteredPatientIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredPatientIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/find/patient\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredPatientId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"201\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/staff/upload-patient-document\");\r\n        console.log(responseData.message);\r\n\r\n        console.log(responseData.patientId);\r\n        localStorage.setItem(\"patientId\",responseData.patientId);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/staff/manage-patient-id\");\r\n        console.log(responseData.message);\r\n        \r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Search Patient</h3>\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Patient ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter patient ID\"\r\n                required\r\n                onChange={patientIdInputChangeHandler}\r\n                onBlur={patientIdInputBlurHandler}\r\n                value={enteredPatientId}\r\n              />\r\n              {patientIdInputIsInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Patient ID must not be empty</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Search</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && (\r\n                <div className=\"p-3\">\r\n                  <h6>Patient does not exist</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffManagePatientId;\r\n","D:\\project_work\\frontend\\src\\pages\\Staff\\UploadPDFDocument.js",["260","261","262"],"D:\\project_work\\frontend\\src\\pages\\Footer.js",[],"D:\\project_work\\frontend\\src\\pages\\HomeContactUs.js",[],"D:\\project_work\\frontend\\src\\pages\\HomeAboutUs.js",["263","264","265"],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":15},{"ruleId":"266","replacedBy":"274"},{"ruleId":"268","replacedBy":"275"},{"ruleId":"270","severity":1,"message":"276","line":8,"column":10,"nodeType":"272","messageId":"273","endLine":8,"endColumn":14},{"ruleId":"270","severity":1,"message":"277","line":8,"column":16,"nodeType":"272","messageId":"273","endLine":8,"endColumn":21},{"ruleId":"270","severity":1,"message":"276","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":14},{"ruleId":"270","severity":1,"message":"277","line":6,"column":16,"nodeType":"272","messageId":"273","endLine":6,"endColumn":21},{"ruleId":"270","severity":1,"message":"278","line":12,"column":19,"nodeType":"272","messageId":"273","endLine":12,"endColumn":29},{"ruleId":"270","severity":1,"message":"276","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":14},{"ruleId":"270","severity":1,"message":"277","line":6,"column":16,"nodeType":"272","messageId":"273","endLine":6,"endColumn":21},{"ruleId":"270","severity":1,"message":"278","line":12,"column":19,"nodeType":"272","messageId":"273","endLine":12,"endColumn":29},{"ruleId":"270","severity":1,"message":"279","line":8,"column":9,"nodeType":"272","messageId":"273","endLine":8,"endColumn":16},{"ruleId":"270","severity":1,"message":"279","line":8,"column":9,"nodeType":"272","messageId":"273","endLine":8,"endColumn":16},{"ruleId":"270","severity":1,"message":"280","line":9,"column":3,"nodeType":"272","messageId":"273","endLine":9,"endColumn":14},{"ruleId":"270","severity":1,"message":"276","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":7},{"ruleId":"270","severity":1,"message":"281","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":14},{"ruleId":"270","severity":1,"message":"282","line":12,"column":3,"nodeType":"272","messageId":"273","endLine":12,"endColumn":9},{"ruleId":"270","severity":1,"message":"283","line":19,"column":9,"nodeType":"272","messageId":"273","endLine":19,"endColumn":22},{"ruleId":"270","severity":1,"message":"284","line":23,"column":9,"nodeType":"272","messageId":"273","endLine":23,"endColumn":19},{"ruleId":"270","severity":1,"message":"285","line":28,"column":9,"nodeType":"272","messageId":"273","endLine":28,"endColumn":15},{"ruleId":"270","severity":1,"message":"280","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":14},{"ruleId":"270","severity":1,"message":"276","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":7},{"ruleId":"270","severity":1,"message":"281","line":12,"column":3,"nodeType":"272","messageId":"273","endLine":12,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":15},{"ruleId":"270","severity":1,"message":"271","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":15},{"ruleId":"270","severity":1,"message":"271","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":15},{"ruleId":"270","severity":1,"message":"278","line":12,"column":19,"nodeType":"272","messageId":"273","endLine":12,"endColumn":29},{"ruleId":"270","severity":1,"message":"280","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":14},{"ruleId":"270","severity":1,"message":"276","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":7},{"ruleId":"270","severity":1,"message":"281","line":12,"column":3,"nodeType":"272","messageId":"273","endLine":12,"endColumn":14},{"ruleId":"270","severity":1,"message":"286","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"287","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"288","line":1,"column":38,"nodeType":"272","messageId":"273","endLine":1,"endColumn":44},{"ruleId":"270","severity":1,"message":"276","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":14},{"ruleId":"270","severity":1,"message":"289","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":16},{"ruleId":"270","severity":1,"message":"290","line":7,"column":10,"nodeType":"272","messageId":"273","endLine":7,"endColumn":16},{"ruleId":"270","severity":1,"message":"291","line":11,"column":10,"nodeType":"272","messageId":"273","endLine":11,"endColumn":29},{"ruleId":"270","severity":1,"message":"282","line":14,"column":10,"nodeType":"272","messageId":"273","endLine":14,"endColumn":16},{"ruleId":"270","severity":1,"message":"279","line":8,"column":9,"nodeType":"272","messageId":"273","endLine":8,"endColumn":16},{"ruleId":"270","severity":1,"message":"287","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"288","line":1,"column":38,"nodeType":"272","messageId":"273","endLine":1,"endColumn":44},{"ruleId":"270","severity":1,"message":"292","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":27},{"ruleId":"270","severity":1,"message":"293","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":21},{"ruleId":"270","severity":1,"message":"282","line":5,"column":29,"nodeType":"272","messageId":"273","endLine":5,"endColumn":35},{"ruleId":"294","severity":1,"message":"295","line":34,"column":13,"nodeType":"296","endLine":34,"endColumn":140},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar",["297"],["298"],"'Form' is defined but never used.","'Group' is defined but never used.","'setIsLogin' is assigned a value but never used.","'authCtx' is assigned a value but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'logoutHandler' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'style2' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Worker' is defined but never used.","'Viewer' is defined but never used.","'defaultLayoutPlugin' is defined but never used.","'StaffMainNavigation' is defined but never used.","'Placeholder' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]